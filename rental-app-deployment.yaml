apiVersion: apps/v1
kind: Deployment
metadata:
  name: rental-app-deployment
spec:
  selector:
    matchLabels:
      app: rental-app
  replicas: 1
  template:
    metadata:
      labels:
        app: rental-app
    spec:
      containers:
        - name: rental-app-container
          image: jeswanthdoss/rental-app:latest
          ports:
            - containerPort: 8081
          env:   # Setting Enviornmental Variables
            - name: MYSQL_HOST   # Setting Database host address from configMap
              value: mysql
            - name: MYSQL_PORT
              value: "3306"
            - name: DB_NAME  # Setting Database name from configMap
              value: rental_schema
            - name: MYSQL_USER  # Setting Database rentalname from Secret
              value: root
            - name: MYSQL_PASSWORD # Setting Database password from Secret
              value: elephant

---

apiVersion: v1 # Kubernetes API version
kind: Service # Kubernetes resource kind we are creating
metadata: # Metadata of the resource kind we are creating
  name: rental-app-svc
spec:
  selector:
    app: rental-app
  ports:
    - protocol: "TCP"
      port: 8081 # The port that the service is running on in the cluster
      targetPort: 8081 # The port exposed by the service
  type: NodePort # type of the service.

